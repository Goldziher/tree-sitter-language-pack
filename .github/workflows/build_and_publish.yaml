name: Build and Publish

on:
  release:
    types: [published]
  pull_request:
    paths:
      - '.github/workflows/build_and_publish.yaml'

jobs:
  clone_vendors:
    name: Clone vendors
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm install -g tree-sitter-cli
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: uv sync --no-install-project
      - run: |
          mkdir parsers
          uv run --no-sync scripts/clone_vendors.py
      - uses: actions/upload-artifact@v4
        with:
          name: language-parsers
          path: parsers

  build-sdist:
    needs: clone_vendors
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: language-parsers
          path: parsers
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: uv sync --no-install-project
      - run: echo "PROJECT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV
      - uses: actions/cache@v4
        id: cache-bindings
        with:
          path: tree_sitter_language_pack/bindings
          key: ubuntu-build-${{ hashFiles('sources/**/*', 'parsers/**/*', 'setup.py') }}
      - name: Build Extensions
        if: steps.cache-bindings.outputs.cache-hit != 'true'
        run: uv run setup.py build_ext --inplace
        env:
          PROJECT_ROOT: ${{github.workspace}}
      - run: uv build --sdist
        env:
          PROJECT_ROOT: ${{github.workspace}}
      - uses: actions/upload-artifact@v4
        with:
          name: dist-sdist
          path: dist

  build-wheels:
    needs: clone_vendors
    name: Build Wheels
    strategy:
      matrix:
        os: [ubuntu-latest, macos-15, windows-latest, ubuntu-24.04-arm]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: language-parsers
          path: parsers
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: uv sync --no-install-project
      - run: echo "PROJECT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV
      - uses: actions/cache@v4
        id: cache-bindings
        with:
          path: tree_sitter_language_pack/bindings
          key: ${{ matrix.os }}-${{ matrix.python-version }}-build-${{ hashFiles('sources/**/*', 'parsers/**/*', 'setup.py') }}
      - name: Build Extensions
        if: steps.cache-bindings.outputs.cache-hit != 'true'
        run: uv run setup.py build_ext --inplace
        env:
          PROJECT_ROOT: ${{github.workspace}}
      - run: uv build --wheel
        env:
          PROJECT_ROOT: ${{github.workspace}}
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist

  publish:
    if: github.event_name == 'release'
    name: Publish Python package
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: "*"
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
